# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Continuous integration

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    defaults:
      run:
        working-directory: ./scripts
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
    # To be able to run Selenium tests
    - name: Install Firefox
      uses: browser-actions/setup-firefox@v1
      with:
        firefox-version: latest
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r ./setup/requirements.txt
        pip install -r ./setup/requirements-dev.txt
    - name: Type check
      run: pyright . --warnings --level warning
    - name: Check code style
      run: |
        black . --check --verbose
        isort . --check --verbose
    - name: Check that dependency graph is up to date
      run: python -m dependoc check
    - name: Run tests
      shell: bash
      run: |
        # Use grep to check that at least one test was run
        python -m unittest discover -t . -s ./test/unit --failfast 2>&1 | tee >(grep --quiet 'Ran [1-9][0-9]* tests')
        # Skip the tests that require credentials or Selenium
        rm ./test/integration/test_boxcast_api.py
        rm ./test/integration/test_plan_summary_html.py
        rm ./test/integration/test_planning_center.py
        python -m unittest discover -t . -s ./test/integration --failfast 2>&1 | tee >(grep --quiet 'Ran [1-9][0-9]* tests')
